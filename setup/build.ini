[cmake-options]
;this file was generated by the 'cmake_scanner.py' script.

;you may add/edit key-value pairs in this section and changes will be reflected as long as the format is correct. running 'cmake_scanner.py' again will not override your changes. other sections you add will also remain untouched. all keys/section names should be lower case, except when creating override sections (explained above).
;hyphen ('-') and underscore ('_') separators are interchangeable in this file. you may use either. the cmake options will always end up with underscores, but the command line options will be hyphenated, no matter what.

;this section format goes as follows: <lowercase-cmake-option> = <lowercase-build-cli-option>: <default-value>
;you may write <lowercase-cmake-option> = <default-value> if you wish to use the same name for both.
;<lowercase-cmake-option> -> it is the raw cmake option name in lower case (python parser requires it), except for the '-d' prefix.
;<lowercase-build-cli-option> -> it is the corresponding 'ergonomic' command line option for the 'build.py' script. it is just a convenience.
;<default-value> -> it is the value 'build.py' will use if no other value is provided through the command line. if the value is a boolean, you may use 'true/on/yes' or 'false/off/no'. case insensitive.

;vulkit - build
cmake-build-type = build-type: Debug

;vulkit - setup
vulkit-enable-instance = instance: False
vulkit-enable-physical-device = physical-device: False
vulkit-enable-logical-device = logical-device: False

;vulkit - feature
vulkit-enable-allocator = allocator: False
vulkit-enable-buffer = buffer: False
vulkit-enable-descriptors = descriptors: False
vulkit-enable-shaders = shaders: False
vulkit-enable-pipeline-layout = pipeline-layout: False
vulkit-enable-pipeline-job = pipeline-job: False
vulkit-enable-graphics-pipeline = graphics-pipeline: False
vulkit-enable-compute-pipeline = compute-pipeline: False
vulkit-enable-command-pool = command-pool: False
vulkit-enable-images = images: False
vulkit-enable-render-pass = render-pass: False
vulkit-enable-swap-chain = swap-chain: False

;toolkit - build
toolkit-build-tests = build-tests: False
toolkit-build-performance = build-performance: False
toolkit-build-profiler = build-profiler: none
toolkit-sanitizers = sanitizers: none

;general settings
toolkit-enable-symbols = symbols: False

;toolkit - feature
toolkit-enable-info-logs = info-logs: False
toolkit-enable-warning-logs = warning-logs: False
toolkit-enable-asserts = asserts: False
toolkit-enable-arena-allocator = arena-allocator: False
toolkit-enable-block-allocator = block-allocator: False
toolkit-enable-stack-allocator = stack-allocator: False
toolkit-enable-multiprocessing = multiprocessing: False
toolkit-enable-profiling = profiling: False

;toolkit - code generation
toolkit-enable-reflection = reflection: False
toolkit-enable-yaml-serialization = yaml-serialization: False

;toolkit - profiling
toolkit-enable-instrumentation = instrumentation: False
toolkit-enable-vulkan-instrumentation = vulkan-instrumentation: False
toolkit-enable-sampling = sampling: False
toolkit-enable-callstack = callstack: False
toolkit-sampling-rate = sampling-rate: 10000

;you can override default values for some options when other options take specific values by creating new sections as follows:
;[<lowercase-cmake-option>.<value-that-triggers-override>]
;<lowercase-build-cli-option> = <new-default-value>
;this is useful when you would like to disable assertions or logs for distribution builds.
;you can stack empty override sections to have those inherit the values of the bottom section:
;[<lowercase-cmake-option-1>.<value-that-triggers-override-1>]
;[<lowercase-cmake-option-2>.<value-that-triggers-override-2>]
;<value-that-triggers-override> may have uppercase letters, as well as <new-default-value> or <default-value>.

[cmake-build-type.Debug]

[cmake-build-type.Release]
info-logs = True
warning-logs = True
asserts = True

[cmake-build-type.Dist]
info-logs = False
warning-logs = False
asserts = False

