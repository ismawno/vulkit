[cmake-options]
;this file was generated by the 'cmake_scanner.py' script.
;you may add/edit key-value pairs in this section and changes will be reflected as long as the format is correct. running 'cmake_scanner.py' again will not override your changes. other sections you add will also remain untouched. all keys/section names should be lower case.
;hyphen ('-') and underscore ('_') separators are interchangeable in this file. you may use either. the cmake options will always end up with underscores, but the command line options will be hyphenated, no matter what.
;this section format goes as follows: <lowercase-cmake-option> = <lowercase-build-cli-option>: <default-value>
;<lowercase-cmake-option> -> it is the raw cmake option name in lower case (python parser requires it), except for the '-d' prefix.
;<lowercase-build-cli-option> -> it is the corresponding 'ergonomic' command line option for the 'build.py' script. it is just a convenience.
;<default-value> -> it is the value 'build.py' will use if no other value is provided through the command line. if the value is a boolean, you may use 'true/on/yes' or 'false/off/no'. case insensitive.
cmake-build-type = build-type: Debug
vulkit-build-tests = vulkit-build-tests: False
toolkit-enable-info-logs = info-logs: False
toolkit-enable-warning-logs = warning-logs: False
toolkit-enable-asserts = asserts: False
toolkit-enable-arena-allocator = arena-allocator: False
toolkit-enable-block-allocator = block-allocator: False
toolkit-enable-stack-allocator = stack-allocator: False
toolkit-enable-multiprocessing = multiprocessing: False
toolkit-enable-profiling = profiling: False
toolkit-enable-instrumentation = instrumentation: False
toolkit-enable-vulkan-instrumentation = vulkan-instrumentation: False
toolkit-build-tests = toolkit-build-tests: False
toolkit-build-performance = build-performance: False
toolkit-build-profiler = build-profiler: none
toolkit-sanitizers = sanitizers: none
toolkit-enable-yaml-serialization = yaml-serialization: False
;you can override default values for some options when other options take specific values by creating new sections as follows:
;[<lowercase-cmake-option>.<value-that-triggers-override>]
;<lowercase-build-cli-option> = <new-default-value>
;this is useful when you would like to disable assertions or logs for distribution builds.

[default-values]
cmake_build_type = build-type: Debug
vulkit_build_tests = vulkit-build-tests: True
toolkit_enable_info_logs = info-logs: False
toolkit_enable_warning_logs = warning-logs: False
toolkit_enable_asserts = asserts: False
toolkit_enable_arena_allocator = arena-allocator: False
toolkit_enable_block_allocator = block-allocator: False
toolkit_enable_stack_allocator = stack-allocator: False
toolkit_enable_multiprocessing = multiprocessing: False
toolkit_enable_profiling = profiling: False
toolkit_enable_instrumentation = instrumentation: False
toolkit_enable_vulkan_instrumentation = vulkan-instrumentation: False
toolkit_build_tests = toolkit-build-tests: False
toolkit_build_performance = build-performance: False
toolkit_build_profiler = build-profiler: none
toolkit_sanitizers = sanitizers: none
toolkit_enable_yaml_serialization = yaml-serialization: False

[cmake-build-type.Debug]
info-logs = True
warning-logs = True
asserts = True

[cmake-build-type.Release]
info-logs = True
warning-logs = True
asserts = True

[cmake-build-type.Dist]
info-logs = False
warning-logs = False
asserts = False

